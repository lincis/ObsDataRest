version: '2.1'
volumes:
  postgres-numeric-storage:

services:
  db:
    image: postgres:12.0
    restart: always
    volumes:
      - postgres-numeric-storage:/var/lib/postgresql
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
      - proxynet

  rest-api:
    depends_on:
      db:
        condition: service_healthy
    build: .
    restart: always
    expose:
      - 5000
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - SESSION_COOKIE_NAME=${SESSION_COOKIE_NAME}
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - VIRTUAL_HOST=${LE_HOST}
      - LETSENCRYPT_HOST=${LE_HOST}
      - LETSENCRYPT_EMAIL=${LE_ADMIN}
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
      - API_USER=${API_USER}
      - API_PW=${API_PW}
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - FLASK_APP=/app/main.py
    entrypoint:
      - python3
      - /app/main.py

networks:
  default:
    external:
      name: nginx-proxy
  proxynet:
    name: shared_network
